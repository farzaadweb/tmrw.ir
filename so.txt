<!-- <div class=""></div>
  <div style="height: calc(100vh - 6rem)" v-if="movieDetail">
    <div class="h-3/4 relative z-40">
      <div class="w-full h-full absolute z-20 background-gradient"></div>
      <div
        class="h-full absolute overflow-hidden lg:flex items-center justify-center z-10 bg-blue"
      >
        <img
          :src="movieDetail.backdrop_path"
          alt="banner"
          class="h-full lg:h-auto blur-[2px]"
        />
      </div>
      <div
        class="w-full h-full relative z-40 mx-auto container px-4 lg:px-6 flex items-center"
      >
        <div
          class="w-1/5 h-full relative z-40 flex items-center justify-center"
        >
          <div class="relative group">
            <img
              :src="movieDetail.poster_path"
              :alt="movieDetail.title"
              class="rounded-lg"
            />
            <button
              class="absolute top-0 group-hover:backdrop-blur-[3px] group-hover:bg-black group-hover:bg-opacity-60 w-full h-full rounded-lg hidden group-hover:flex items-center justify-center transition-all"
            >
              <Icon
                icon="ph:corners-in-duotone"
                class="text-4xl text-white-1"
              />
            </button>
          </div>
        </div>
        <div class="w-4/5 h-full pl-8 flex flex-col justify-center">
          <div class="flex items-center">
            <span class="text-3xl text-white-1 font-bold"
              >{{ movieDetail.title }}
            </span>
            <span class="text-white-2 text-xl ml-2"
              >({{ movieDetail.id }})</span
            >
          </div>
          <div class="flex items-center mt-1">
            <span class="text-base text-white-1 font-thin">{{
              movieDetail.release_date
            }}</span>
            <span
              v-for="(item, index) in movieDetail.production_countries"
              class="text-base text-white-1 font-normal ml-1"
              >({{ item.iso_3166_1 }})
            </span>
          </div>
        </div>
      </div>
    </div>
  </div> -->




  // async function setRecommendations() {
//   const response = await fetch(
//     `https://api.themoviedb.org/3/movie/${movieId}/recommendations?api_key=${apiKey}&language=en-US&page=1`,
//     apiTokenData
//   );
//   if (response.ok) {
//     return response.json();
//   }
//   return "Error";
// }

// async function setExperts() {
//   const response = await fetch(
//     `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`
//   );
//   if (response.ok) {
//     return response.json();
//   }
//   return "Error";
// }

// async function setMedias() {
//   const response = await fetch(
//     `https://api.themoviedb.org/3/movie/${movieId}/external_ids?api_key=${apiKey}`
//   );
//   if (response.ok) {
//     return response.json();
//   }
//   return "Error";
// }

// async function setReviews() {
//   const response = await fetch(
//     `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`,
//     apiTokenData
//   );
//   if (response.ok) {
//     return response.json();
//   }
//   return "Error";
// }

// async function setTrailer() {
//   const response = await fetch(
//     `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${apiKey}&language=en-US`,
//     apiTokenData
//   );
//   if (response.ok) {
//     return response.json();
//   }
//   return "Error";
// }

export async function setCustomize(storage: any) {
  // let recommendations = await setRecommendations();
  // let castANDcrew = await setExperts();
  // let allMedias = await setMedias();
  // let Reviews = await setReviews();
  // let Trailer = await setTrailer();
  // storage.trailers = Trailer.results;
  // storage.reviews = Reviews.results;
  // storage.medias = allMedias;
  // storage.casts = castANDcrew.cast;
  // storage.crews = castANDcrew.crew;
  // storage.recommend = recommendations.results;
  // storage.poster_path = `https://image.tmdb.org/t/p/w500${storage.poster_path}`;
  // storage.backdrop_path = `https://image.tmdb.org/t/p/original${storage.backdrop_path}`;
  // storage.imdb_id = `https://www.imdb.com/title/${storage.imdb_id}`;
  // storage.belongs_to_collection = storage.belongs_to_collection.map(
  //   (item: any) => {
  //     item.poster_path = `https://image.tmdb.org/t/p/w500${item.poster_path}`;
  //     item.backdrop_path = `https://image.tmdb.org/t/p/original${item.backdrop_path}`;
  //     return item;
  //   }
  // );
  // storage.crews = storage.crews.map((item: any) => {
  //   item.profile_path = `https://image.tmdb.org/t/p/original${item.profile_path}`;
  //   return item;
  // });
  // storage.casts = storage.casts.map((item: any) => {
  //   item.profile_path = `https://image.tmdb.org/t/p/original${item.profile_path}`;
  //   return item;
  // });
  // storage.genres = storage.genres.slice(0, 3);
  // storage.production_companies = storage.production_companies.map(
  //   (item: any) => {
  //     item.logo_path = `https://image.tmdb.org/t/p/original${item.logo_path}`;
  //     return item;
  //   }
  // );
}
